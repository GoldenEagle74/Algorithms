# Временная сложность: O(n)
# Объяснение алгоритма:
# Алгоритм последовательно вычисляет числа Tribonacci, начиная с базовых значений, и обновляет их на каждой итерации цикла.
# Если n равно 0, возвращается t0.
# Если n равно 1 или 2, возвращается соответствующее значение.
# Если n больше 2, вычисляется Tribonacci последовательность в цикле с n - 2 итерациями.
# По окончании цикла возвращается значение t2, которое является n-ым числом в Tribonacci последовательности.



def tribonacci(n):
    # Базовые значения Tribonacci
    t0, t1, t2 = 0, 1, 1
    
    # Если n = 0, возвращаем t0
    if n == 0:
        return t0
    
    # Если n = 1 или n = 2, возвращаем соответствующее значение
    if n == 1 or n == 2:
        return t1
    
    # Вычисляем Tribonacci последовательность для n >= 3
    for _ in range(n - 2):
        t0, t1, t2 = t1, t2, t0 + t1 + t2
    
    return t2
